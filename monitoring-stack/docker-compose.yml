# docker-compose.yml
# Full stack that attaches to an existing "ml-network"

services:
  # --- Iris API ---
  iris:
    image: amitk2501/iris-predictor-app:latest
    container_name: iris-predictor-app
    ports:
      - "8000:8000"
    environment:
      - PICKLE_PATH=baked_models/iris_best.pkl
      - LOG_DB_PATH=/logs/logs.db
      - STAGED_DATA_PATH=/data/new_data.csv
      # If you later want MLflow instead of the baked model, set:
      # - MLFLOW_TRACKING_URI=http://mlflow-server:5000
      # - MODEL_URI=models:/iris-best/1
    volumes:
      - ../baked_models:/app/baked_models   # <-- repo-root mapping (IMPORTANT)
      - ./logs:/logs
      - ./data:/data
    networks:
      - ml-network
    restart: unless-stopped

  # --- Prometheus ---
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - ml-network
    restart: unless-stopped

  # --- Grafana ---
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # change in prod
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    networks:
      - ml-network
    restart: unless-stopped

networks:
  ml-network:
    external: true
    name: ml-network
